<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<HTML>
<HEAD>
<META http-equiv="Content-Type" content="text/html; charset=UTF-8">
<META http-equiv="X-UA-Compatible" content="IE=8">
<TITLE>Created by BCL easyConverter SDK 3 (HTML Version)</TITLE>
<META name="generator" content="BCL easyConverter SDK 3.0.60">
<STYLE type="text/css">

body {margin-top: 0px;margin-left: 0px;}

#page_1 {position:relative; overflow: hidden;margin: 128px 0px 134px 98px;padding: 0px;border: none;width: 695px;}
#page_1 #id_1 {border:none;margin: 0px 0px 0px 0px;padding: 0px;border:none;width: 695px;overflow: hidden;}
#page_1 #id_2 {border:none;margin: 10px 0px 0px 232px;padding: 0px;border:none;width: 363px;overflow: hidden;}

#page_2 {position:relative; overflow: hidden;margin: 89px 0px 86px 76px;padding: 0px;border: none;width: 717px;}

#page_3 {position:relative; overflow: hidden;margin: 89px 0px 87px 76px;padding: 0px;border: none;width: 717px;}

#page_3 #dimg1 {position:absolute;top:411px;left:0px;z-index:-1;width:642px;height:365px;}
#page_3 #dimg1 #img1 {width:642px;height:365px;}
#page_4 {position:relative; overflow: hidden;margin: 89px 0px 70px 76px;padding: 0px;border: none;width: 717px;}
#page_5 {position:relative; overflow: hidden;margin: 90px 0px 83px 76px;padding: 0px;border: none;width: 717px;}
#page_5 #id_1 {border:none;margin: 0px 0px 0px 0px;padding: 0px;border:none;width: 717px;overflow: hidden;}
#page_5 #id_2 {border:none;margin: 23px 0px 0px 28px;padding: 0px;border:none;width: 689px;overflow: hidden;}

#page_5 #dimg1 {position:absolute;top:663px;left:28px;z-index:-1;width:614px;height:286px;}
#page_5 #dimg1 #img1 {width:614px;height:286px;}




#page_6 {position:relative; overflow: hidden;margin: 95px 0px 11px 76px;padding: 0px;border: none;width: 717px;}





.ft0{font: bold 27px 'Gabriola';color: #008000;line-height: 43px;}
.ft1{font: bold 27px 'Arial';color: #008000;line-height: 32px;}
.ft2{font: 16px 'Arial';line-height: 18px;}
.ft3{font: bold 16px 'Arial';line-height: 19px;}
.ft4{font: 21px 'Gabriola';line-height: 38px;}
.ft5{font: 16px 'Gabriola';line-height: 27px;}
.ft6{font: 21px 'Gabriola';line-height: 39px;}
.ft7{font: 16px 'Gabriola';line-height: 23px;}
.ft8{font: 16px 'Gabriola';line-height: 29px;}
.ft9{font: 16px 'Gabriola';line-height: 26px;}
.ft10{font: 16px 'Gabriola';margin-left: 14px;line-height: 22px;}
.ft11{font: 16px 'Gabriola';line-height: 22px;}
.ft12{font: 16px 'Gabriola';margin-left: 14px;line-height: 29px;}
.ft13{font: 21px 'Arial';line-height: 24px;}
.ft14{font: 19px 'Gabriola';line-height: 34px;}
.ft15{font: 16px 'Gabriola';line-height: 20px;}
.ft16{font: 19px 'Gabriola';line-height: 35px;}
.ft17{font: 16px 'Gabriola';line-height: 21px;}
.ft18{font: 19px 'Gabriola';margin-left: 6px;line-height: 34px;}
.ft19{font: 16px 'Gabriola';margin-left: 14px;line-height: 21px;}
.ft20{font: 16px 'Gabriola';margin-left: 14px;line-height: 26px;}
.ft21{font: 16px 'Gabriola';line-height: 25px;}
.ft22{font: 16px 'Courier New';line-height: 18px;}
.ft23{font: 13px 'Courier New';line-height: 15px;}
.ft24{font: 13px 'Courier New';line-height: 16px;}
.ft25{font: 21px 'Gabriola';line-height: 34px;}
.ft26{font: 16px 'Gabriola';margin-left: 14px;line-height: 20px;}
.ft27{font: 16px 'Gabriola';margin-left: 14px;line-height: 19px;}
.ft28{font: 16px 'Gabriola';line-height: 19px;}

.p0{text-align: left;padding-left: 17px;margin-top: 0px;margin-bottom: 0px;}
.p1{text-align: left;margin-top: 5px;margin-bottom: 0px;}
.p2{text-align: left;padding-left: 253px;margin-top: 40px;margin-bottom: 0px;}
.p3{text-align: left;margin-top: 0px;margin-bottom: 0px;}
.p4{text-align: left;padding-left: 28px;padding-right: 128px;margin-top: 5px;margin-bottom: 0px;text-indent: 47px;}
.p5{text-align: left;margin-top: 49px;margin-bottom: 0px;}
.p6{text-align: left;padding-left: 28px;padding-right: 138px;margin-top: 2px;margin-bottom: 0px;text-indent: 47px;}
.p7{text-align: left;padding-left: 28px;padding-right: 145px;margin-top: 7px;margin-bottom: 0px;}
.p8{text-align: left;margin-top: 30px;margin-bottom: 0px;}
.p9{text-align: left;padding-left: 28px;margin-top: 6px;margin-bottom: 0px;}
.p10{text-align: justify;padding-left: 28px;padding-right: 158px;margin-top: 10px;margin-bottom: 0px;}
.p11{text-align: left;padding-left: 28px;padding-right: 128px;margin-top: 18px;margin-bottom: 0px;}
.p12{text-align: justify;padding-left: 28px;padding-right: 221px;margin-top: 12px;margin-bottom: 0px;}
.p13{text-align: justify;padding-left: 28px;padding-right: 171px;margin-top: 18px;margin-bottom: 0px;}
.p14{text-align: justify;padding-left: 28px;padding-right: 150px;margin-top: 28px;margin-bottom: 0px;}
.p15{text-align: left;padding-left: 28px;padding-right: 144px;margin-top: 28px;margin-bottom: 0px;}
.p16{text-align: left;margin-top: 20px;margin-bottom: 0px;}
.p17{text-align: left;padding-left: 28px;padding-right: 138px;margin-top: 6px;margin-bottom: 0px;text-indent: 47px;}
.p18{text-align: left;margin-top: 33px;margin-bottom: 0px;}
.p19{text-align: left;padding-left: 28px;padding-right: 131px;margin-top: 6px;margin-bottom: 0px;text-indent: 47px;}
.p20{text-align: left;margin-top: 32px;margin-bottom: 0px;}
.p21{text-align: left;margin-top: 445px;margin-bottom: 0px;}
.p22{text-align: left;padding-left: 28px;padding-right: 129px;margin-top: 6px;margin-bottom: 0px;}
.p23{text-align: left;padding-left: 28px;padding-right: 132px;margin-top: 0px;margin-bottom: 0px;}
.p24{text-align: left;padding-left: 28px;margin-top: 12px;margin-bottom: 0px;}
.p25{text-align: left;padding-left: 28px;padding-right: 133px;margin-top: 0px;margin-bottom: 0px;}
.p26{text-align: left;padding-left: 28px;margin-top: 9px;margin-bottom: 0px;}
.p27{text-align: left;padding-left: 28px;padding-right: 156px;margin-top: 0px;margin-bottom: 0px;}
.p28{text-align: left;padding-left: 28px;padding-right: 129px;margin-top: 13px;margin-bottom: 0px;}
.p29{text-align: justify;margin-top: 13px;margin-bottom: 0px;}
.p30{text-align: justify;padding-left: 28px;margin-top: 6px;margin-bottom: 0px;}
.p31{text-align: justify;padding-left: 28px;margin-top: 0px;margin-bottom: 0px;}
.p32{text-align: justify;margin-top: 9px;margin-bottom: 0px;}
.p33{text-align: left;padding-left: 28px;padding-right: 133px;margin-top: 5px;margin-bottom: 0px;text-indent: 47px;}
.p34{text-align: left;margin-top: 19px;margin-bottom: 0px;}
.p35{text-align: left;padding-left: 28px;padding-right: 127px;margin-top: 5px;margin-bottom: 0px;}
.p36{text-align: justify;padding-left: 28px;padding-right: 132px;margin-top: 14px;margin-bottom: 0px;}
.p37{text-align: left;padding-left: 28px;padding-right: 135px;margin-top: 16px;margin-bottom: 0px;}
.p38{text-align: left;padding-left: 28px;padding-right: 156px;margin-top: 15px;margin-bottom: 0px;}
.p39{text-align: left;padding-left: 28px;padding-right: 131px;margin-top: 16px;margin-bottom: 0px;}
.p40{text-align: left;margin-top: 12px;margin-bottom: 0px;}
.p41{text-align: justify;padding-left: 28px;padding-right: 156px;margin-top: 4px;margin-bottom: 0px;}
.p42{text-align: left;padding-left: 28px;margin-top: 17px;margin-bottom: 0px;}
.p43{text-align: left;padding-left: 28px;margin-top: 0px;margin-bottom: 0px;}
.p44{text-align: left;padding-left: 28px;margin-top: 18px;margin-bottom: 0px;}
.p45{text-align: left;padding-left: 28px;margin-top: 19px;margin-bottom: 0px;}
.p46{text-align: left;padding-left: 28px;padding-right: 196px;margin-top: 12px;margin-bottom: 0px;}
.p47{text-align: left;padding-left: 28px;margin-top: 13px;margin-bottom: 0px;}
.p48{text-align: left;padding-left: 19px;margin-top: 1px;margin-bottom: 0px;}
.p49{text-align: left;padding-left: 28px;padding-right: 127px;margin-top: 6px;margin-bottom: 0px;}
.p50{text-align: left;padding-left: 28px;padding-right: 141px;margin-top: 0px;margin-bottom: 0px;}
.p51{text-align: left;padding-left: 28px;margin-top: 11px;margin-bottom: 0px;}
.p52{text-align: left;padding-left: 28px;padding-right: 152px;margin-top: 0px;margin-bottom: 0px;}
.p53{text-align: justify;padding-left: 28px;padding-right: 156px;margin-top: 0px;margin-bottom: 0px;}




</STYLE>
</HEAD>

<BODY>
<DIV id="page_1">


<DIV id="id_1">
<P class="p0 ft0">BAZY DANYCH I – BAZA WSPIERAJĄCA</P>
<P class="p1 ft1">TWORZENIE KURSÓW REKOLEKCYJNYCH</P>
<P class="p2 ft2">Projekt nr 2</P>
</DIV>
<DIV id="id_2">
<P class="p3 ft3">Autor: Pecyna Krzysztof</P>
</DIV>
</DIV>
<DIV id="page_2">


<P class="p3 ft4">1. Tytuł projektu</P>
<P class="p4 ft5">Celem projektu pod tytułem „BAZA WSPIERAJĄCA TWORZENIE KURSÓW REKOLEKCYJNYCH” jest stworzenie bazy danych w systemie PostgreSql oraz nakładki w dowolnej technologii umożliwiającej manipulacje na danych z tej bazy.</P>
<P class="p5 ft6">2. Opis projektu</P>
<P class="p6 ft7">Organizacja wszelkiego typu imprez, nawet tych niewielkich wiąże się z dość dużą ilością ustaleń. Dobrze gdy podział pracy, daty, koszty i wszelkie inne ustalenia tego typu są trzymane w jednym miejscu, i mogą być dynamicznie zmieniane. Projekt przedstawia pewną uproszczoną propozycje zarządzania tego typu danymi, w przypadku organizowania tzw „Kursów Filipa”.</P>
<P class="p7 ft8">Kursy takie niemal zawsze mają dokładnie taką samą formę, i podobny przebieg, a organizatorzy z edycji na edycję są różni. Nie ma stałego miejsca ich organizacji ani stałych terminów.</P>
<P class="p8 ft6">3. Założenia projektu</P>
<P class="p9 ft9">Zakładamy, że projekt będzie cechował się następującymi funkcjami:</P>
<P class="p10 ft11"><SPAN class="ft2">•</SPAN><SPAN class="ft10">Przechowywanie informacji o ludziach (dalej zwanych ekipą) uprawnionych do brania udziału w organizacji samego przedsięwzięcia.</SPAN></P>
<P class="p11 ft8"><SPAN class="ft2">•</SPAN><SPAN class="ft12">Przechowywanie informacji o zadaniach (dalej zwanych funkcjami) które są do wykonania w ramach danego kursu. Tu funkcje typu konferencje, gotowanie, powitanie uczestników itp.</SPAN></P>
<P class="p12 ft11"><SPAN class="ft2">•</SPAN><SPAN class="ft10">Możliwość dodawania nowych kursów, edycji ich oraz przypisywania poszczególnym funkcjom danego kursu, członka ekipy.</SPAN></P>
<P class="p13 ft8"><SPAN class="ft2">•</SPAN><SPAN class="ft12">Dodawanie i przechowywanie personaliów osób wyjeżdżających na kurs jako uczestnicy.</SPAN></P>
<P class="p14 ft8"><SPAN class="ft2">•</SPAN><SPAN class="ft12">Dodawanie do bazy informacji na temat dostępnych domów rekolekcyjnych oraz ich przegląd.</SPAN></P>
<P class="p15 ft8"><SPAN class="ft2">•</SPAN><SPAN class="ft12">Baza powinna działać na serwerze z rodziny Unix. Powinna cechować się czytelnością oraz bezpieczeństwem wprowadzanych danych. Proces Tworzenia Bazy powinien być Jasny i czytelny.</SPAN></P>
</DIV>
<DIV id="page_3">
<DIV id="dimg1">
<a href="./BazyERD.png" ><img src="./BazyERD.png" width="600px"></img></a>
</DIV>


<P class="p3 ft13">4. Analiza projektu</P>
<P class="p16 ft14">4.1 Specyfikacja danych wejściowych</P>
<P class="p17 ft9">Z założeń projektowych wynika, że głównym źródłem danych przetwarzanych przez projekt będą ludzie odpowiedzialni za decyzje dotyczące planowanych kursów, dalej możemy nazywać ich administratorami (ze względu właśnie na pełnione przez nich obowiązki).</P>
<P class="p18 ft14">4.2 Opis oczekiwanych danych wejściowych</P>
<P class="p19 ft15">Z charakteru zagadnienia elementy projektu muszą reprezentować odpowiednie elementy świata rzeczywistego (chodzi tutaj zarówno o jednostki jak również nazwy poszczególnych krotek i tabel). W całości, dane wejściowe składać się będą z tekstu bądź z liczb przekazywanych przez administratora przez specjalne formularze.</P>
<P class="p20 ft16">4.3 Zdefiniowanie struktur danych</P>
<P class="p21 ft14">4.4 Specyfikacja interfejsu użytkownika</P>
<P class="p22 ft15">Interfejs zbudowany jest jako aplikacja napisana w całości w języku PHP. Należy uwzględnić iż sama aplikacja nie zajmuje się w żaden sposób przetwarzaniem danych, jedyne co robi to przesyła odpowiednie zapytania serwerowi bazy danych i odbiera ewentualne błędy lub ostrzeżenia. Całość operacji wykonywana jest po stronie serwera. 
Do każdego kursu może być przypisany 0 lub więcej:
	<ul class="p22 ft15">	
		<li><b>członków ekipy</b> - ludzie organizujący kurs. Każdy będzie wykonywał jakąś funkcje na naszym kursie. Każdy członek ekipy może być przypisany do więcej niż jednej funkcji w kursie. Każdy członek ekipy może być przypisany do więcej niż jednego kursu</li> 
		<li><b>uczestników</b> - ludzie którzy wyjeżdżają na kurs w charakterze uczestników. Każdy uczestnik może być przypisany tylko do jednego kursu. </li> 
	</ul>
	</P><p class="p22 ft15">Lista możliwych do wykonania funkcji nie jest zamknięta i zawsze może być rozszerzona. Na każdym kursie kilka członków ekipy może wykonywać jedną funkcję. Może zdarzyć się też przypadek, że nikt nie bedzie wykonywał danej funkcji w konkretnym kursie.</p>
	
</DIV>
<DIV id="page_4">
 

<P class="p23 ft9">Interfejs nastawiony jest na administratora który wie jakich danych oczekuje aplikacja. Po stronie aplikacji webowej dane nie są w żaden sposób weryfikowane, zatem w przypadku źle wprowadzonych danych (których baza oczywiście nie przyjmie) zostaje zwrócony komunikat o błędzie.</P>
<P class="p24 ft15">formularze danych:</P>
<P class="p25 ft11">Wszystkie formularze tworzone są w sposób dynamiczny zatem zmiana struktury bazy danych będzie wpływać na zmianę listy pól formularzy które należy uzupełnić.</P>
<P class="p26 ft17">Wyświetlanie danych:</P>
<P class="p27 ft15">Aplikacja wyświetla dane w stanie surowym. Jedyny opis jakim mogą dysponować dane listowane to nazwa kolumny w której znajduje się dany rekord. Jest to spowodowane pełną automatyzacją wyświetlania wyników.</P>
<P class="p28 ft15">Powodem tego, iż wszystkie elementy (zarówno formularze jak i dane listowane) są tworzone dynamicznie jest moja chęć rozwoju tego projektu w przyszłości. Nie wiem jeszcze jakie elementy będą doimplementowane w kolejnych wersjach a taka forma zapewnia, iż mimo zmian struktury samych tabel aplikacja powinna działać poprawnie.</P>
<P class="p29 ft14"><SPAN class="ft14">4.5</SPAN><SPAN class="ft18">Wyodrębnienie i zdefiniowanie zadań</SPAN></P>
<P class="p30 ft17"><SPAN class="ft2">•</SPAN><SPAN class="ft19">komunikacja z administratorem,</SPAN></P>
<P class="p31 ft17"><SPAN class="ft2">•</SPAN><SPAN class="ft19">komunikacja z bazą danych,</SPAN></P>
<P class="p31 ft17"><SPAN class="ft2">•</SPAN><SPAN class="ft19">odbiór danych od użytkownika,</SPAN></P>
<P class="p31 ft17"><SPAN class="ft2">•</SPAN><SPAN class="ft19">wysyłanie zapytań bazie danych,</SPAN></P>
<P class="p31 ft9"><SPAN class="ft2">•</SPAN><SPAN class="ft20">wyświetlanie wyników niektórych zapytań.</SPAN></P>
<P class="p32 ft14"><SPAN class="ft14">4.6</SPAN><SPAN class="ft18">Wybór narzędzi programistycznych</SPAN></P>
<P class="p33 ft7">Baza danych jest realizowana w języku PostgreSql. Utworzona została dla zgodności z wersją 8.3.11 PostgreSql. Nakładka została utworzona w języku PHP5. Ze względu na technologie do prawidłowego działania nakładki na serwerze powinna znajdować się odpowiednia instalacja PHP a także mod do apacha2 obsługujący bazę danych postgreSQL. Na stacji administratora musi znajdować się dowolna przeglądarka internetowa.</P>
</DIV>
<DIV id="page_5">



<DIV id="id_1">
<P class="p3 ft13">5. Kodowanie</P>
<P class="p34 ft14">5.1 Opis funkcji wykonywanych po stronie bazy danych</P>
<P class="p35 ft7"><SPAN class="ft3">uczestnicy_data_id_kursy() </SPAN>- Wspomaga dodawanie uczestników do kursu. Jeśli nie zdefiniowano id_kursy to automatycznie uzupełni brakującą informację (użyje id ostatnio utworzonego kursu co wydaje się być najlogiczniejszym rozwiązaniem). Jeśli podano id_kursy a podana wartość nie odnosi się do żadnego kursu funkcja nie pozwoli dodać takiego delikwenta. Wywoływana jest przez trygger uzytkownicy_data przed dodaniem nowego rekordu.</P>
<P class="p36 ft21"><SPAN class="ft3">kursy_uzupelnij_dane() </SPAN>- Kursy Filipa zazwyczaj (choć nie zawsze) trwają dokładnie 3 dni zatem znając informację o dacie początku, datę końca można obliczyć. Podobnie z datą zamykającą zapisy na kurs. Zazwyczaj zamyka się listę uczestników już tydzień wcześniej. Funkcja pilnuje również aby data rozpoczęcia kursu nie była zbyt wczesna. Wywoływana jest przez trygger kursy_data przed dodaniem nowego rekordu.</P>
<P class="p37 ft8"><SPAN class="ft3">funkcje_usun_fun() </SPAN>- wspomaga usuwanie funkcji z tabeli funkcje. Jest wywoływana przez Trigger funkcje_usun przed usunięciem każdego wiersza z tabeli. Pilnuje spójności danych.</P>
<P class="p38 ft8"><SPAN class="ft3">ekipa_usun_fun() </SPAN>- wspomaga usuwanie członków ekipy z tabeli ekipa. Jest wywoływana przez Trigger ekipa_usun przed usunięciem każdego wiersza z tabeli. Pilnuje spójności danych.</P>
<P class="p39 ft8"><SPAN class="ft3">kursy_usun_fun() </SPAN>- wspomaga usuwanie wierszy z tabeli kursy. Jest wywoływana przez Trigger kursy_usun przed usunięciem każdego wiersza z tabeli. Pilnuje spójności danych.</P>
<P class="p40 ft16">5.2 Integralność danych</P>
<P class="p41 ft17">Za spójność danych w bazie odpowiadają odpowiednie właściwości takie jak NOT NULL w tych kolumnach tabeli w których jest to niezbędne oraz poprzez triggery i funkcje które pilnują aby dane w bazie były spójne.</P>
<P class="p42 ft22">FUNCTION ekipa_usun_fun()</P>
<P class="p43 ft22">TRIGGER ekipa_usun</P>
<P class="p44 ft22">FUNCTION funkcje_usun_fun()</P>
<P class="p43 ft22">TRIGGER funkcje_usun</P>
<P class="p45 ft22">FUNCTION kursy_usun_fun()</P>
<P class="p43 ft22">TRIGGER kursy_usun</P>
<P class="p46 ft11">Każdy rekord bazy jest identyfikowany unikalnym ID nadawanym zgodnie z sekwencjami, osobnymi dla każdej tabeli. Przykład na tabeli kursy:</P>
<P class="p47 ft2">CREATE SEQUENCE KURSY_seq;</P>
</DIV>
<DIV id="id_2">
<P class="p3 ft23">CREATE TABLE kursy (</P>
<P class="p48 ft24">id INTEGER NOT NULL PRIMARY KEY DEFAULT nextval('KURSY_seq') UNIQUE ...</P>
</DIV>
</DIV>
<DIV id="page_6">


<P class="p3 ft4">6.Testowanie</P>
<P class="p49 ft11">Struktura plików bazy, została tak przemyślana aby dało się za pomocą jednej komendy utworzyć całą bazę od nowa. Będąc w katalogu Create_Base należy uruchomić klienta bazy danych i wykonać polecenie '\i DO.sql'. Takie podejście ułatwia testowanie całej aplikacji ponieważ za każdym razem możemy zmienić dowolny element i zobaczyć jak on wpłynie na budowę całej reszty. Poza tym wszystkie zapytania budujące całą bazę są logicznie porozrzucane do wielu plików co ułatwia odnalezienie się w kodzie. Z przeprowadzonych przeze mnie testów wynika, że baza poprawnie reaguje na wszelkie polecenia nakładki. Testowanie odbyło się w przeglądarce Google Chromium Wersja 31.0.1650.63 Ubuntu 13.10.</P>
<p class='p49 ft11'>Aby utworzyć bazę danych dla projektu należy wykonać plik z instrukcjami <span style="color:red"><b>./CreateDB/DO.sql</b></span>. zostanie wtedy wywołane rekurencyjnie drzewo plików z rozszerzeniem .sql znajdujące się w katalogu ./CreateDB/*. Znajdują się tam 3 katalogi które wykonają po kolei: </p>
	<ul class='ft11'>
		<li>zniszczenie starych tabel itp.</li>
		<li><span style="color:green"><b>konstrukcję nowych tabel itp.</b></span></li>
		<li><span style="color:blue">dodanie przykładowych danych</span></li>
		<li>wywołanie kilku kontrolnych zapytań</li>
	</ul>
	<p class='p49 ft11'>Najbardziej interesujący jest katalog <span style="color:green"><b>CREATE</b></span> który tworzy domeny, tabele i odpowiednie triggery.
	</p>
	<pre>
	<span style="color:green"><b>├── CREATE</b>
	│   ├── CREATE.sql
	│   ├── CREATE_TABLES.sql
	│   ├── CREATE_TRIGGERS.sql
	│   ├── DOMAIN
	│   │   └── EMAIL.sql
	│   ├── DROP.sql
	│   ├── TABLES
	│   │   ├── DOMY.sql
	│   │   ├── EKIPA.sql
	│   │   ├── FUNKCJE_EKIPA_KURS.sql
	│   │   ├── FUNKCJE.sql
	│   │   ├── KURSY.sql
	│   │   ├── UCZESTNICY.sql
	│   ├── test.sql
	│   └── TRIGGERS
	│       ├── EKIPA.sql
	│       ├── FUNKCJE.sql
	│       ├── KURS.sql
	│       └── UCZESTNICY.sql</span>
	<span style="color:red"><b>├── DO.sql</b></span>
	<span style="color:blue"><b>├── INSERT</b>
	│   ├── DOMY.sql
	│   ├── EKIPA.sql
	│   ├── FUNKCJE.sql
	│   ├── INSERT.sql
	│   ├── KURSY.sql
	│   ├── UCZESTNICY.sql</span>
	└── SELECT
		├── KURSY.sql
		└── SELECT.sql
	
	
	</pre>
	
	<p class='p49 ft11'>Na potrzeby własne napisałem też dokumentacje dot. testowania owej aplikacji. Oto znalezione przeze mnie pola które sprawdzałem. 
	</p>
	<pre>
	<b>Wyświetlanie:</b>
	  - wyświetlanie listy kursów
	  - wyświetlanie listy domów rekolekcyjnych
	  - wyświetlanie listy ludzi z ekipy
	  
	  - wyświetlanie kursu
		- poprawne wyświetlanie ekipy
		- poprawne wyświetlanie członków
	  - wyświetlanie domu
	  - wyświetlanie członka ekipy
		- poprawne wyświetlanie aktualnych kursów
		- minionych kursów

	<b>Dodawanie:</b>
	  - Poprawne dodanie kursu
		- walidacja adresu email
		- Dodanie funkcji/członka ekipy do kursu
		- dodanie uczestnika do kursu (z poziomu widoku kursu)
	  - dodanie uczestnika (z menu głównego)
	  - Poprawne dodanie nowego członka ekipy
	  - Poprawne dodanie nowej funkcji
	  
	<b>Usuwanie:</b>
	  - Usuwanie kursu
		- czy usunięto powiązania z funkcja/ekipa
		- czy usunięto uczestników
	  - Usuwanie domu rekolekcyjnego
		- czy usunięto odbywające się tam kursy
		- czy usunięto dane dot. tych kursów
	  - Usuwanie ekipy
		- czy usunięto funkcje w kursach w których brał udział
	  - Usuwanie funkcji
		- czy zniknęły informacje o nich w kursach
		- czy zniknęły info u osób pełniących te funkcje
	  - usuwanie uczestników
	  - odłączenie funkcji/ekipy od kursu  

	<b>Edycja:</b>
	  - edycja kursu
	  - edycja ekipy
	  - edycja uczestnika
	  - edycja funkcji
	  - edycja domu rekolekcyjnego

	</pre>
	<p class='p49 ft11'>
	<small  style="font-size: xx-small">	  
	*Testowałem wszystkie te przypadki jakiś czas temu na swojej maszynie. Z uwagi na dużą czasochłonność nie miałem możliwości przeprowadzić tego procesu w całości na fatcacie.</small>
	</p>

<P class="p18 ft25">7.Wdrożenie, raport i wnioski.</P>
<P class="p50 ft21">podstawowe założenia projektu zostały wykonane. Podczas prac pojawiały się problemy z przenośnością aplikacji (inaczej reagowała lokalna aplikacja bazy danych od docelowej. Funkcje które lokalnie działały musiały być zmodyfikowane w docelowej). Na szczęście udało się wyeliminować wszystkie znalezione przeze mnie błędy.</P>
<P class="p51 ft15">W kolejnych wersjach bazę można uzupełnić o:</P>
<P class="p31 ft15"><SPAN class="ft2">•</SPAN><SPAN class="ft26">zarządzanie kosztami wyjazdu,</SPAN></P>
<P class="p52 ft28"><SPAN class="ft2">•</SPAN><SPAN class="ft27">Sprawowanie pewnych funkcji (takich jak głoszenie konferencji) wymaga zapoznania się z odpowiednimi materiałami. Zarządzanie tymi materiałami również mogłoby być elementem funkcjonalności aplikacji.</SPAN></P>
<P class="p53 ft11"><SPAN class="ft2">•</SPAN><SPAN class="ft10">Umożliwienie zdania raportów przez ekipę poszczególnych kursów, aby kolejne mogły być lepiej zorganizowane.</SPAN></P>
</DIV></HTML>
